"""Configuration file for the Sphinx documentation builder."""

# This file only contains a selection of the most common options. For a full
# list see the documentation:
# http://www.sphinx-doc.org/en/master/config

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys

from recommonmark.transform import AutoStructify

here = os.path.dirname(os.path.abspath(__file__))
sys.path.append(os.path.dirname(here))
# sys.path.insert(0, os.path.abspath('../'))

import lambda_handlers  # noqa # isort:skip


# -- Project information -----------------------------------------------------

project = 'lambda-handlers'
copyright = '2019, Steffen Leistner, Alexandre Savio'
author = 'Steffen Leistner, Alexandre Savio'
language = None

# -- General configuration ---------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'recommonmark',
    'sphinx.ext.autodoc',
    'sphinx.ext.napoleon',
    'sphinx.ext.viewcode',
    'autoapi.extension',
    'sphinx.ext.autosummary',
    'sphinx.ext.autosectionlabel',
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The master toctree document.
master_doc = 'index'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = [
    '_build',
    'Thumbs.db',
    '.DS_Store',
    'autoapi_templates'
]

github_root = 'https://github.com/enter-at/lambda-handlers/tree'

github_doc_root = f'{github_root}/master/docs/'

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = lambda_handlers.__version__
# The full version, including alpha/beta/rc tagss
release = lambda_handlers.__version__


# -- Options for AutoApi --------------------------------------------------
autoapi_type = 'python'
autoapi_dirs = ['../lambda_handlers']
autoapi_ignore = [
    '*/lambda_handlers/formatters/format.py',
    '*mixins*',
    '*test_*',
    '*conftest*'
]
autoapi_template_dir = 'autoapi_templates'
autoapi_keep_files = True
autoapi_root = '_api'

# -- Options for Autodoc -------------------------------------------------
autoclass_content = 'class'
autodoc_member_order = 'bysource'
autodoc_mock_imports = ['marshmallow', 'jsonschema']
autosummary_generate = True

# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'sphinx_rtd_theme'

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
# html_static_path = ['_static']

# Prefix document path to section labels, otherwise autogenerated labels would look like 'heading'
# rather than 'path/to/file:heading'
autosectionlabel_prefix_document = True

# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (
        master_doc,
        'lambda-handlers',
        'Lambda-Handlers Documentation',
        [author],
        1,
    ),
]

# If true, show URL addresses after external links.
# man_show_urls = False


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (
        master_doc,
        'lambda-handlers',
        'Lambda-Handlers Documentation',
        author,
        'Lambda-Handlers',
        'An opinionated Python package that facilitates specifying AWS Lambda handlers.',
        'Miscellaneous',
    ),
]

# Documents to append as an appendix to all manuals.
# texinfo_appendices = []

# If false, no module index is generated.
# texinfo_domain_indices = True

# How to display URL addresses: 'footnote', 'no', or 'inline'.
# texinfo_show_urls = 'footnote'

# If true, do not generate a @detailmenu in the "Top" node's menu.
# texinfo_no_detailmenu = False


def setup(app):
    """Configure recommonmark.AutoStructify."""
    app.add_config_value(
        'lambda_handlers_config', {
            'auto_toc_tree_section': 'Contents',
            'enable_eval_rst': True,
            'enable_auto_doc_ref': True,
        }, True,
    )
    app.add_transform(AutoStructify)
